{"version":3,"sources":["assemblyscript/index.ts","router/homeRouter.js","views/homeView/index.js","views/bookView/index.js","router/bookRouter.js","store/reducer.js","store/index.js","views/bookView/detail.js","router/index.js","components/header.js","views/bookView/todoList.js","App.js","serviceWorker.js","index.js"],"names":["f","fetch","then","response","arrayBuffer","binary","module","WebAssembly","Module","Instance","env","abort","exports","path","component","props","titleRef","React","createRef","state","classname","className","this","ref","Component","bookMain","index","children","defaultState","inputValue","list","store","createStore","action","type","newState","JSON","parse","stringify","value","bookDetail","routers","homeRouter","bookRouter","connect","Header","id","subscribe","handleStoreChange","console","log","getState","la","isLogin","onClick","routerTo","to","history","news","getChildData","call","TodoList","handleInputChange","bind","handleList","btnClick","setState","e","target","dispatch","map","item","key","onChange","App","res","alert","msg","data","plus","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6dc59e8c.chunk.js","sourcesContent":["\n        var f=fetch(__webpack_public_path__ + \"static/assembly/index.a7cfd4d3.wasm\").then(function(response){\n            return response.arrayBuffer();\n        }).then(function(binary){\n                var module = new WebAssembly.Module(binary);\n                var instance = new WebAssembly.Instance(module, { env: { abort: function() {} } });\n                return instance.exports;\n        });\n        module.exports =f;\n            ","import homeView from '../views/homeView/index'\r\n\r\nexport default{\r\n        path:'/',\r\n        component:homeView\r\n}\r\n","import React from 'react';\r\nimport '../../App.css';\r\n\r\nclass HomeView extends React.Component{\r\n    titleRef = React.createRef();\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            classname:'homeTitle'\r\n        }\r\n    };\r\n    // componentWillMount(){\r\n    //     console.log('渲染前调用')\r\n    // };\r\n    // componentDidMount (){\r\n    //     console.log('第一次渲染调用')\r\n    //     console.log(this)\r\n    // };\r\n    // componentWillReceiveProps(){\r\n    //     console.log('props修改')\r\n    // };\r\n    // componentWillUnmount(){\r\n    //     alert('组件被销毁')\r\n    // }\r\n    render(){\r\n        return(\r\n            <div className={this.state.classname} ref={this.titleRef}>首页container</div>\r\n        )\r\n    }\r\n} \r\n\r\nexport default HomeView","import React from 'react'\r\nclass bookMain extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state= {\r\n            index: -1\r\n        }\r\n    };\r\n    render(){\r\n        return(\r\n            <div className=\"book_list\">\r\n                订单列表\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default bookMain","import index from '../views/bookView/index'\r\nimport detail from '../views/bookView/index'\r\n\r\nexport default{\r\n        path:'/book',\r\n        component:index,\r\n        children:[\r\n            {\r\n                path:'/book/detail',\r\n                component:detail,\r\n            }\r\n        ]\r\n}","//reducer.js\r\n\r\nconst defaultState = {\r\n    inputValue: '',\r\n    list: []\r\n}\r\n//reducer 可以接受state但是不能修改state，需要对state进行深拷贝\r\nexport default (state = defaultState, action) => {\r\n    if (action.type === 'change_input_value') {\r\n        const newState = JSON.parse(JSON.stringify(state));\r\n        newState.inputValue = action.value;\r\n        return newState\r\n    }\r\n    if (action.type === 'add_input_value') {\r\n        const newState = JSON.parse(JSON.stringify(state));\r\n        newState.list = [...state.list, state.inputValue]\r\n        newState.inputValue = '';\r\n        return newState;\r\n    }\r\n    return state;\r\n}","//store/index.js\r\n\r\nimport { createStore } from 'redux'\r\nimport reducer from './reducer';\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport store from \"../../store\"\r\n\r\n\r\nclass bookDetail extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state= {\r\n            index: -1\r\n        }\r\n    };\r\n    render(){\r\n        return(\r\n            <div className=\"book_list\">\r\n                订单详情\r\n                {this.props.value}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (store)=>{\r\n    return{\r\n        value:store.inputValue\r\n    }\r\n}\r\n\r\nexport default  connect(mapStateToProps)(bookDetail)","import homeRouter from \"./homeRouter\"\r\nimport bookRouter from \"./bookRouter\"\r\nimport detail from \"../views/bookView/detail\";\r\nconst routers = [\r\n    homeRouter,\r\n    bookRouter,\r\n    {\r\n        path:'/book/detail',\r\n        component:detail,\r\n    }\r\n]\r\n\r\n\r\nexport default routers","import React from \"react\"\r\nimport { BrowserRouter as Router , Link } from 'react-router-dom';\r\nimport store from '../store';\r\nimport {connect} from 'react-redux'\r\nimport wasmPromise from \"../assemblyscript/index.ts\";\r\nimport \"./style/header.scss\"\r\n\r\nclass Header extends React.Component{\r\n    // 周期\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            index:0,\r\n            id:66\r\n        }\r\n\r\n        // wasmPromise()\r\n        //     .then((res)=>{\r\n        //         console.log(res)\r\n        //     })\r\n\r\n\r\n        store.subscribe(this.handleStoreChange)\r\n    };\r\n    handleStoreChange(){\r\n        console.log(store.getState().list)\r\n    }\r\n    // componentWillReceiveProps(){\r\n    //     console.log('props修改')\r\n    //     console.log(this.props)\r\n    // };\r\n\r\n    render(){\r\n        let la = this.props.isLogin\r\n        return(\r\n            <header className=\"App-header\">\r\n                <h1>{la}</h1>\r\n                <button onClick={() => this.routerTo('/')}>\r\n                    <Link to=\"/\">首页 {this.props.id}</Link>\r\n                </button>\r\n                <button >\r\n                    <Link to={`/book`} onClick={() => this.routerTo('/book')}>列表页</Link>\r\n                </button>\r\n                <button >\r\n                    <Link to={`/book/detail?id=${this.state.id}`} onClick={() => this.routerTo('/book/detail')}>详情页</Link>\r\n                </button>\r\n                <button >\r\n                    <Link to={`/book/list`} onClick={() => this.routerTo('/book/list')}>列表页</Link>\r\n                </button>\r\n\r\n            </header>\r\n        )\r\n    };\r\n    //业务\r\n    routerTo(path){\r\n        console.log(this.props.history)\r\n        console.log(this.props.news)\r\n        this.props.news.getChildData.call(this,path)\r\n\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLogin: state.inputValue,\r\n\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Header)\r\n","//TodoList.js\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport store from '../../store';\r\nclass TodoList extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        console.log(store);\r\n        this.state = store.getState();\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleList = this.handleList.bind(this);\r\n        this.btnClick = this.btnClick.bind(this);\r\n        this.handleStoreChange = this.handleStoreChange.bind(this);\r\n        store.subscribe(this.handleStoreChange)\r\n    }\r\n    handleStoreChange(){\r\n        this.setState(store.getState());\r\n    }\r\n    handleInputChange(e){\r\n        const action = {\r\n            type: 'change_input_value',\r\n            value: e.target.value\r\n        }\r\n        store.dispatch(action);\r\n    }\r\n    handleList(){\r\n        return this.state.list.map((item,index) => {\r\n            return <li key={index}>{item}</li>\r\n        })\r\n    }\r\n    btnClick(){\r\n        const action = {\r\n            type: 'add_input_value',\r\n            value: this.state.inputValue\r\n        }\r\n        store.dispatch(action);\r\n    }\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div>\r\n                    <input\r\n                        value = {this.state.inputValue}\r\n                        onChange = {this.handleInputChange}\r\n                    />\r\n                    <button onClick={this.btnClick}>提交</button>\r\n                </div>\r\n                <ul>\r\n                    {this.handleList()}\r\n                </ul>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n// 总路由\nimport routers from \"./router/index.js\"\nimport './App.css';\nimport Header from \"./components/header.js\"\nimport Todo from \"./views/bookView/todoList\"\nimport { Provider } from 'react-redux';\nimport store from './store'\n\n\nclass App extends React.Component {\n  // 第一个是组件初始化(initialization)阶段\n  constructor(props) {\n    super(props);\n    this.state = {\n      routers: routers,\n      index: 0,\n      id:6,\n      type: false,\n    }\n    store.subscribe(this.handleStoreChange)\n  };\n  handleStoreChange(){\n    console.log(store.getState())\n  }\n  routerTo(path) {\n    console.log(this)\n    console.log(path, this.state, this.props)\n  };\n  plus(){\n    let id = this.state.id;\n    id++\n    this.setState({\n      id:id\n    })\n  }\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            {/*路由模块*/}\n              <Header data=\"132\" id={this.state.id} news={this}>\n                <h2>测试</h2>\n              </Header>\n            {/*<button onClick={() => this.routerTo('/')}>*/}\n            {/*  <Link to=\"/\">首页 {this.props.id}</Link>*/}\n            {/*</button>*/}\n            {/*<button >*/}\n            {/*  <Link to={`/book?id=465`} onClick={() => this.routerTo('/book')}>列表页</Link>*/}\n            {/*</button>*/}\n              <button onClick={()=>{ this.plus() }}>+</button>\n              <h1>{this.state.msg}</h1>\n              <Todo/>\n              <div className=\"container\">\n                {\n                  routers.map((item,index)=>{\n                    console.log(item)\n                       return (<Route exact key={index} path={item.path} component={item.component}/>)\n                  })\n                }\n              </div>\n\n              {/*<Route exact  path={'/'} component={homeView}/>*/}\n              {/*<Route exact  path={'/book'} component={bookView}/>*/}\n\n            {/* 页面end */}\n          </div>\n        </Router>\n      </Provider>\n    )\n  }\n  // 业务diamante\n  getChildData=(res)=>{\n\n\t\talert(res)\n\t\tthis.setState({\n\t\t\t\tmsg:res\n\t\t})\n\t}\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, Link } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}